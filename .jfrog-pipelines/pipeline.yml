resources:
  - name: jfrogClientGoRepo
    type: GitRepo
    configuration:
      gitProvider: LeelaGitHub
      path: leela-dev/jfrog-client-go
      branches:
        include: ^{{gitBranch}}$
      buildOn:
        commit: true
        pullRequestCreate: true

pipelines:
  - name: jfrog_goclient_static_analysis
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          RESOLVE_REPO: npm-virtual
    steps:
      - name: trigger_all
        type: Bash
        configuration:
          inputResources:
            - name: jfrogClientGoRepo
        execution:
          onExecute:
            - echo Hello
            - echo $res_jfrogClientGoRepo_commitSha
      - name: static_code_analysis
        type: Bash
        configuration:
          inputSteps:
            - name: trigger_all
        execution:
          onExecute:
            - echo Gyana is working on it hard...
      - name: go_sec
        type: Bash
        configuration:
          integrations:
            - name: int_default_artifactory
          inputResources:
            - name: jfrogClientGoRepo
          inputSteps:
            - name: trigger_all
        execution:
          onStart:
            #This whole section will be replaced by getting task as jfrog/setup-go
            - pushd $res_jfrogClientGoRepo_resourcePath/setup-go
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            - jfrog npm install
            - npm run dist
            - popd
            - task: jfrog/setup-go@v0.0.2
              input:
                version: "1.19.3"
                cacheIntegration: int_default_artifactory
            - go version
            - go env GOPATH
          onExecute:
            - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
            # Temporary ignoring G301,G302,G306
            - cd $res_jfrogClientGoRepo_resourcePath
            - gosec -exclude=G204,G301,G302,G304,G306 -exclude-dir=\.*test\.* ./...
  - name: Frogbot
    steps:
      - name: Frogbot_Scan
        type: Bash
        configuration:
          integrations:
            - name: jfrogPlatform
            - name: LeelaGitHub
          inputResources:
            - name: jfrogClientGoRepo
          environmentVariables:
            # [Mandatory]
            # JFrog platform URL
            JF_URL: $int_jfrogPlatform_url
            # [Mandatory if JF_USER and JF_PASSWORD are not provided]
            # JFrog access token with 'read' permissions for Xray
            JF_ACCESS_TOKEN: $int_jfrogPlatform_accessToken
            # [Mandatory]
            # GitHub personal access token with the following permissions:
            # Read and Write access to code, pull requests, security events, and workflows
            JF_GIT_TOKEN: $int_LeelaGitHub_token
            JF_GIT_PROVIDER: "github"
            # [Mandatory]
            # API endpoint to GitHub Enterprise server
            JF_GIT_API_ENDPOINT: $int_LeelaGitHub_url
            # [Mandatory]
            # GitHub organization namespace
            JF_GIT_OWNER: "leela-dev"
            JF_GIT_REPO: $res_jfrogClientGoRepo_gitRepoFullName
        execution:
          onExecute:
            - curl -fLg "https://releases.jfrog.io/artifactory/frogbot/v2/[RELEASE]/getFrogbot.sh" | sh
            - ./frogbot scan-pull-requests
            - ./frogbot scan-and-fix-repos
            # For Windows runner:
            # - iwr https://releases.jfrog.io/artifactory/frogbot/v2/[RELEASE]/frogbot-windows-amd64/frogbot.exe -OutFile .\frogbot.exe
            # - .\frogbot.exe scan-pull-requests
            # - .\frogbot.exe scan-and-fix-repos



