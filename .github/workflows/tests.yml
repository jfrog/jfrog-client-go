name: JFrog Client Go Tests
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - "master"

# Ensures that only the latest commit is running for each PR at a time.
# Ignores this rule for push events.
concurrency:
  group: ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  Pretest:
    runs-on: ubuntu-latest
    steps:
      - name: Unlabel 'safe to test'
        uses: actions-ecosystem/action-remove-labels@v1
        if: ${{github.event_name != 'push' }}
        with:
          labels: "safe to test"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: Lint
        run: go vet -v ./...

  JFrog-Client-Go-Unit-Tests:
    name: Unit Tests
    needs: Pretest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: Unit tests
        run: go test -v github.com/jfrog/jfrog-client-go/tests --timeout 0 --tags itest --test.unit

  JFrog-Client-Go-Artifactory-Access-Tests:
    name: ${{ matrix.suite }} ${{ matrix.os }}
    needs: Pretest
    strategy:
      fail-fast: false
      matrix:
        suite: [artifactory, access]
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: Install local Artifactory
        uses: jfrog/.github/actions/install-local-artifactory@main
        with:
          RTLIC: ${{ secrets.RTLIC }}

      - name: artifactory tests
        run: go test -v github.com/jfrog/jfrog-client-go/tests --timeout 0 --tags itest --test.${{ matrix.suite }} --rt.url=http://localhost:8081/artifactory --ci.runId=${{ runner.os }}-${{ matrix.suite }}

  JFrog-Client-Go-Ds-Xr-MPU-Tests:
    needs: Pretest
    name: ${{ matrix.suite }} ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        suite: [distribution, xray, xsc, mpu]
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: ${{ matrix.suite }} tests
        run: go test -v github.com/jfrog/jfrog-client-go/tests --timeout 0 --tags itest --test.${{ matrix.suite }} --platform.url=${{ secrets.PLATFORM_URL }} --rt.user=${{ secrets.PLATFORM_USER }} --rt.password=${{ secrets.PLATFORM_PASSWORD }} --access.token=${{ secrets.PLATFORM_ADMIN_TOKEN }} --ci.runId=${{ runner.os }}-${{ matrix.suite }}

  JFrog-Client-Go-Catalog-Tests:
    name: ${{ matrix.suite }} ${{ matrix.os }}
    needs: Pretest
    strategy:
      fail-fast: false
      matrix:
        suite: [catalog]
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: catalog tests
        run: go test -v github.com/jfrog/jfrog-client-go/tests --timeout 0 --tags itest --test.${{ matrix.suite }} --ci.runId=${{ runner.os }}-${{ matrix.suite }}

  JFrog-Client-Go-Repositories-Tests:
    needs: Pretest
    name: repositories ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      - name: Install local Artifactory
        uses: jfrog/.github/actions/install-local-artifactory@main
        with:
          RTLIC: ${{ secrets.RTLIC }}

      - name: Repositories tests
        run: go test -v github.com/jfrog/jfrog-client-go/tests --timeout 0 --tags itest --test.repositories --rt.url=http://localhost:8081/artifactory
